import React, { useEffect, useState } from "react";
import { Button, Row, Stack, OverlayTrigger, Tooltip } from "react-bootstrap";
//import { useNavigate } from "react-router-dom";
import SalaryDetailsModal from "./SalaryDetailsModal";
import html2pdf from "html2pdf.js";
import { CSVLink } from "react-csv";

function Salary() {
  //const navigate = useNavigate();
  const [salaryRecords, setSalaryRecords] = useState([]);
  const [showSalaryModal, setShowSalaryModal] = useState(false);
  const [selectedRecordId, setSelectedRecordId] = useState(null);
  const [salaryReload, setSalaryReload] = useState(false);

  useEffect(() => {
    // Fetch salary records from the backend when the component mounts
    const fetchSalaryRecords = async () => {
      try {
        const response = await fetch("http://localhost:5000/api/hr/salaries");

        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        console.log(response);
        const data = await response.json();
        console.log(data);

        setSalaryRecords(data);
        setSalaryReload(false);
      } catch (error) {
        console.error("Error fetching salary records:", error);
      }
    };
    fetchSalaryRecords();
  }, [salaryReload]);

  const handleMoreButtonClick = (id) => {
    setSelectedRecordId(id);
    setShowSalaryModal(true);
  };

  // Function to handle modal close
  const handleCloseModal = () => {
    setShowSalaryModal(false);
    setSalaryReload(true);
  };

  //CSV Data generation
  const generateCSVData = () => {
    const currentDate = new Date().toLocaleDateString();

    // Add table name and generated date as the first two rows
    const csvData = [
      ...salaryRecords.map((record) => ({
        Id: record.empId,
        Name: record.name,
        Position: record.position,
        Basic: record.basicSalary,
        Allowance: record.allowance,
        "Total Salary": record.totalSal,
        "No Pay": record.noPay,
        "ETF-3%": record.ETF,
        "EPF-8%": record.EPFE,
        "Net Salary": record.netSal,
        "EPF-12%": record.EPFC,
        Bank: record.bank,
        Branch: record.branch,
        "Account No": record.account,
      })),
      { Id: "Salary Records" },
      { Id: `Generated Date: ${currentDate}` },
      { Id: `Generated by: Neo Tech Motors & Services` },
    ];

    return csvData;
  };

  // Generate PDF content with table rows and other details
  const generatePDF = () => {
    const currentDate = new Date().toLocaleDateString();

    // Generate table rows dynamically based on the current state of table data
    const tableRows = salaryRecords
      .map((record) => {
        return `
        <tr>
          <td>${record.empId}</td>
          <td>${record.name}</td>
          <td>${record.position}</td>
          <td>Rs.${record.basicSalary}</td>
          <td>Rs.${record.allowance}</td>
          <td>Rs.${record.totalSal}</td>
          <td>Rs.${record.noPay}</td>
          <td>Rs.${record.ETF}</td>
          <td>Rs.${record.EPFE}</td>
          <td>Rs.${record.netSal}</td>
          <td>Rs.${record.EPFC}</td>
        </tr>
      `;
      })
      .join("");

    // Generate PDF content with table rows and other details
    const content = `
      <div style="margin: 20px;">
        <h3 style="background-color: black; color: white; padding: 10px;">Salary Records of Employees</h3>
        <table style="width: 100%; border-collapse: collapse; font-size: 10px;">

          <thead>
            <tr style="background-color: black; color: white;">
              <th style="border: 1px solid white; padding: 10px;">Id</th>
              <th style="border: 1px solid white; padding: 10px;">Name</th>
              <th style="border: 1px solid white; padding: 10px;">Position</th>
              <th style="border: 1px solid white; padding: 10px;">Basic</th>
              <th style="border: 1px solid white; padding: 10px;">Allowance</th>
              <th style="border: 1px solid white; padding: 10px;">Total Salary</th>
              <th style="border: 1px solid white; padding: 10px;">No Pay</th>
              <th style="border: 1px solid white; padding: 10px;">ETF-3%</th>
              <th style="border: 1px solid white; padding: 10px;">EPF-8%</th>
              <th style="border: 1px solid white; padding: 10px;">Net Salary</th>
              <th style="border: 1px solid white; padding: 10px;">EPF-12%</th>
            </tr>
          </thead>
          <tbody>
            ${tableRows}
          </tbody>
        </table>
        <p style="text-align: right; margin-top: 20px;">Generated Date: ${currentDate}</p>
        <p style="text-align: right; margin-top: 20px;">Neo Tech Motors & Services</p>
      </div>
    `;

    // Generate PDF from the content
    html2pdf()
      .from(content)
      .toPdf()
      .output("dataurlnewwindow")
      .save(`Salary_Records_generated_${currentDate}.pdf`);
  };

  return (
    <section>
      <Row>
        <Stack direction="horizontal">
          <div className="p-2">
            <Button variant="success" size="md" style={{ margin: "10px" }}>
              <CSVLink
                data={generateCSVData()}
                filename={`Salary_Records_${new Date().toLocaleDateString()}.csv`}
              >
                Create Report(CSV)
                <span
                  className="bi bi-file-excel"
                  style={{ marginRight: "5px" }}
                ></span>
              </CSVLink>
            </Button>
            <Button
              variant="danger"
              size="md"
              onClick={generatePDF}
              style={{ margin: "10px" }}
            >
              Create Report(PDF)
              <span
                className="bi bi-file-pdf"
                style={{ marginRight: "5px" }}
              ></span>
            </Button>
          </div>
          <OverlayTrigger
            placement="right"
            overlay={
              <Tooltip id="tooltip-top">
                Cannot create or delete leave profiles in here.Beacuse
                operations like that can only perform with employee relavant
                operations only.(When employee create or delete his/her profile
                automatically change in here.)
              </Tooltip>
            }
          >
            <div>
              <i
                className="bi bi-info-circle"
                style={{ fontSize: "1.5rem", cursor: "pointer" }}
              ></i>
            </div>
          </OverlayTrigger>
        </Stack>
      </Row>

      <div className="table">
        <table className="table table-rounded">
          <thead>
            <tr>
              <th style={{ backgroundColor: "black", color: "white" }}>Id</th>
              <th style={{ backgroundColor: "black", color: "white" }}>Name</th>
              <th style={{ backgroundColor: "black", color: "white" }}>
                Position
              </th>
              <th style={{ backgroundColor: "black", color: "white" }}>
                Basic
              </th>
              <th style={{ backgroundColor: "black", color: "white" }}>
                Allowance
              </th>
              <th style={{ backgroundColor: "black", color: "white" }}>
                Total Salary
              </th>
              <th style={{ backgroundColor: "black", color: "white" }}>
                Deductions
              </th>
              <th style={{ backgroundColor: "black", color: "white" }}>
                Net Salary
              </th>
              <th style={{ backgroundColor: "black", color: "white" }}></th>
            </tr>
          </thead>

          <tbody>
            {salaryRecords.map((record) => (
              <tr key={record.id}>
                {/* Render data for each salary record */}
                <td>{record.empId}</td>
                <td>{record.name}</td>
                <td>{record.position}</td>
                <td>Rs.{record.basicSalary}</td>
                <td>Rs.{record.allowance}</td>
                <td>Rs.{record.totalSal}</td>
                <td>
                  Rs.
                  {record.noPay + record.ETF + record.EPFE}
                </td>
                <td>Rs.{record.netSal}</td>
                <td>
                  {/* More button with onClick handler */}
                  <Button
                    variant="dark"
                    className="d-flex mx-auto"
                    onClick={() => handleMoreButtonClick(record._id)}
                  >
                    More
                  </Button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      {/* Render the SalaryDetailsModal with appropriate props */}
      <SalaryDetailsModal
        show={showSalaryModal}
        handleClose={handleCloseModal}
        id={selectedRecordId}
      />
    </section>
  );
}

export default Salary;
